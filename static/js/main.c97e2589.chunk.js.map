{"version":3,"sources":["components/NavBarLink.tsx","components/NavBar.tsx","App.tsx","pages/Home/HomeRedir.tsx","pages/Home/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","helpers.tsx","pages/PageNotFound.tsx","AppRouting.tsx","index.tsx"],"names":["NavBarLink","title","redirectTo","className","isActive","cn","to","NavBar","role","App","HomeRedirect","navigate","useNavigate","location","useLocation","useEffect","pathname","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PersonRow","personSlug","born","died","mother","father","motherName","fatherName","isPersonSelected","PeopleTable","people","useParams","map","PeoplePage","useState","setPeople","errorMessage","setErrorMessage","isLoaded","setIsLoaded","loadPeople","loadedPeople","String","fullPeopleList","find","personA","personB","getPeopleWithParents","isTableEmpty","length","PageNotFound","router","createHashRouter","path","element","children","AppRouting","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c97e2589.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  title: string,\n  redirectTo: string,\n};\n\nexport const NavBarLink:React.FC<Props> = ({ title, redirectTo }) => (\n  <NavLink\n    className={({ isActive }) => cn('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n    to={`${redirectTo}`}\n  >\n    {title}\n  </NavLink>\n);\n","import { NavBarLink } from './NavBarLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavBarLink title=\"Home\" redirectTo=\"/\" />\n        <NavBarLink title=\"People\" redirectTo=\"/people\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nexport const HomeRedirect: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname === '/home') {\n      navigate('/');\n    }\n  }, [location, navigate]);\n\n  return null;\n};\n","import { HomeRedirect } from './HomeRedir';\n\nexport const HomePage = () => {\n  return (\n    <>\n      <HomeRedirect />\n      <h1 className=\"title\">Home Page</h1>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person | undefined;\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person?.slug}`}\n      className={cn({ 'has-text-danger': person?.sex === 'f' })}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\n// import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  personSlug: string | undefined;\n};\n\nexport const PersonRow:React.FC<Props> = ({ person, personSlug }) => {\n  const {\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const isPersonSelected = personSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': isPersonSelected,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {\n          mother ? (\n            <PersonLink person={mother} />\n          ) : (\n            <p>\n              {motherName || '-'}\n            </p>\n          )\n        }\n      </td>\n      <td>\n        {\n          father ? (\n            <PersonLink person={father} />\n          ) : (\n            <p>\n              {fatherName || '-'}\n            </p>\n          )\n        }\n      </td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable:React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonRow\n            key={person.slug}\n            person={person}\n            personSlug={personSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeopleWithParents } from '../helpers';\n\nexport const PeoplePage:React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      const loadedPeople = await getPeople();\n\n      setPeople(loadedPeople);\n    } catch (error) {\n      setErrorMessage(`Something went wrong with ${String(error)}`);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const fullPeopleList = getPeopleWithParents(people);\n\n  const isTableEmpty = isLoaded && !errorMessage && people.length === 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {errorMessage && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              {errorMessage}\n            </p>\n          )}\n\n          {isTableEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoaded\n            ? <PeopleTable people={fullPeopleList} />\n            : <Loader />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from './types';\n\nexport const getPeopleWithParents = (people: Person[]) => {\n  return people.map(person => {\n    const mother = people.find(personA => personA.name === person.motherName);\n    const father = people.find(personB => personB.name === person.fatherName);\n\n    return {\n      ...person,\n      mother: mother || null,\n      father: father || null,\n    };\n  });\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  RouterProvider,\n  createHashRouter,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/Home/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nconst router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n      },\n      {\n        path: '/home',\n        element: <HomePage />,\n      },\n      {\n        path: '/people',\n        element: <PeoplePage />,\n      },\n      {\n        path: '/people/:personSlug',\n        element: <PeoplePage />,\n      },\n      {\n        path: '/*',\n        element: <PageNotFound />,\n      },\n    ],\n  },\n]);\n\nexport const AppRouting:React.FC = () => {\n  return (\n    <RouterProvider router={router} />\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport ReactDOM from 'react-dom';\nimport { AppRouting } from './AppRouting';\n\nReactDOM.render(\n  <AppRouting />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}